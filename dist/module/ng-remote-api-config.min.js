!function(a){"use strict";var b=a.module("ngRemoteApiConfig",["lodashAngularWrapper"]);b.provider("apiConfigService",function(){var b=this;b.options={apiConfigPath:"/ ",apiRoot:"http://localhost"},b.$get=function(c,d,e,f){var g={},h=function(a){var g={method:"GET",cache:"false",withCredentials:"true",url:a+b.options.apiConfigPath};return c(g).then(function(b){var c={},f=b.data;if(d.debug("*** API CONFIG: for apiRoot:",a,f),!f)throw["*** ERROR API CONFIG: for apiRoot:"+a+" ui-json.txt is not available "];return c.services=e(f.services).mapValues(function(b){return a+b}).valueOf()||{},c.envName=f.envName||"na",c.urls=f.urls||{},c.options=f.options||{},{currentEnv:c,uiJson:f}}).then(function(a){var b=a.uiJson;return f.all(b.apiHosts?e(b.apiHosts).mapValues(function(a){return h(a)}).valueOf():null).then(function(b){return!b||e.isEmpty(b)?a.currentEnv:e(b).assign({currentEnv__:a.currentEnv}).reduce(function(a,b){return a.envName!==b.envName&&d.info("*** API CONFIG : the env names do not fit:",a.envName,b.envName),a.services=e.assign(a.services||{},b.services||{}),a.urls=e.assign(a.urls||{},b.urls||{}),a.options=e.assign(a.options||{},b.options||{}),a})})})},i=null;return g.get=function(){return i=i||h(b.options.apiRoot)},g.getUrl=function(b){if(a.isString(b.url))return f.when(b);if(!b.serviceName)throw["*** API CONFIG: The service name is not defined. "];return g.get().then(function(c){var d=c.services[b.serviceName],e=a.extend({},b);if(!d)throw["*** API CONFIG: The service not found. The serviceName:"+b.serviceName+" ."];return e.url=c.services[b.serviceName]+(b.resourcePath||""),delete e.serviceName,delete e.resourcePath,e})},g.get().then(function(a){d.debug("*** API CONFIG retrieved:",a)}),g}}),b.factory("httpConfigured",function(b,c){var d=function(d){return a.isString(d.url)?b(d):c.getUrl(d).then(function(a){return b(a)})};return d})}(window.angular);